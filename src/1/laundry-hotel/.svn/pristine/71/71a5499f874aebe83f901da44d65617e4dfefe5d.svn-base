using Etextsys.Terminal.Domain;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Media;

namespace ETextsys.Terminal.Model.Choose
{
    public class UnDoModel : ViewModelBase
    {
        /// <summary>
        /// 读写器状态 0 无法扫描 1 扫描中 2暂停
        /// </summary>
        private int _ReaderState;
        public int ReaderState
        {
            get { return _ReaderState; }
            set
            {
                _ReaderState = value;
                RaisePropertyChanged("ReaderState");
            }
        }

        private SolidColorBrush _StateColor;
        public SolidColorBrush StateColor
        {
            get { return _StateColor; }
            set
            {
                _StateColor = value;
                RaisePropertyChanged("StateColor");
            }
        }

        private string title;
        public string Title
        {
            get { return title; }
            set
            {
                title = value;
                RaisePropertyChanged("Title");
            }
        }

        private int unRegisterTotal;
        public int UnRegisterTotal
        {
            get { return unRegisterTotal; }
            set
            {
                unRegisterTotal = value;
                this.RaisePropertyChanged("UnRegisterTotal");
            }
        }

        private int textileCount;
        public int TextileCount
        {
            get { return textileCount; }
            set
            {
                textileCount = value;
                this.RaisePropertyChanged("TextileCount");
            }
        }

        private bool _SubmitEnabled;
        public bool SubmitEnabled
        {
            get { return _SubmitEnabled; }
            set
            {
                _SubmitEnabled = value;
                this.RaisePropertyChanged("SubmitEnabled");
            }
        }

        private bool _CancelEnabled;
        public bool CancelEnabled
        {
            get { return _CancelEnabled; }
            set
            {
                _CancelEnabled = value;
                this.RaisePropertyChanged("CancelEnabled");
            }
        }

        private ObservableCollection<UnDoTableModel> _UnDoTable;
        public ObservableCollection<UnDoTableModel> UnDoTable
        {
            get { return _UnDoTable; }
            set
            {
                _UnDoTable = value;
                RaisePropertyChanged("UnDoTable");
            }
        }
    }

    public class UnDoTableModel : ViewModelBase
    {
        private string brandName;
        public string BrandName
        {
            get { return brandName; }
            set
            {
                brandName = value;
                this.RaisePropertyChanged("BrandName");
            }
        }

        private string className;
        public string ClassName
        {
            get { return className; }
            set
            {
                className = value;
                this.RaisePropertyChanged("ClassName");
            }
        }

        private string sizeName;
        public string SizeName
        {
            get { return sizeName; }
            set
            {
                sizeName = value;
                this.RaisePropertyChanged("SizeName");
            }
        }

        private int textileCount;
        public int TextileCount
        {
            get { return textileCount; }
            set
            {
                textileCount = value;
                this.RaisePropertyChanged("TextileCount");
            }
        }

        private int unDoCount;
        public int UnDoCount
        {
            get { return unDoCount; }
            set
            {
                unDoCount = value;
                this.RaisePropertyChanged("UnDoCount");
            }
        }
    }
}
